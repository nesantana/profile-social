{"version":3,"file":"static/js/914.415a5a38.chunk.js","mappings":"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","sources":["Components/Comment/index.tsx","Components/Post/index.tsx","Components/User/index.tsx","Pages/Feed/index.tsx"],"sourcesContent":["import {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Flex,\r\n  Popover,\r\n  PopoverArrow,\r\n  PopoverBody,\r\n  PopoverCloseButton,\r\n  PopoverContent,\r\n  PopoverFooter,\r\n  PopoverHeader,\r\n  PopoverTrigger,\r\n  Text,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { iComment } from \"../../Interfaces\";\r\nimport { BiTrash } from \"react-icons/bi\";\r\nimport { usePostsContext } from \"../../Context/Posts.context\";\r\nimport { useUsersContext } from \"../../Context/Users.context\";\r\n\r\nconst Comment = ({ comment }: { comment: iComment }) => {\r\n  const { isOpen, onToggle, onClose } = useDisclosure();\r\n  const { deleteComment } = usePostsContext();\r\n  const { currentUser } = useUsersContext();\r\n\r\n  return (\r\n    <>\r\n      <Card p={2}>\r\n        <Flex gap={2} justifyContent={\"space-between\"}>\r\n          <Text fontSize={\"small\"}>{comment?.email}</Text>\r\n          {comment.email === currentUser.email && (\r\n            <>\r\n              <Popover\r\n                returnFocusOnClose={false}\r\n                isOpen={isOpen}\r\n                onClose={onClose}\r\n                placement=\"end\"\r\n                closeOnBlur={false}\r\n              >\r\n                <PopoverTrigger>\r\n                  <Button onClick={onToggle}>\r\n                    <BiTrash color=\"red\" cursor=\"pointer\" />\r\n                  </Button>\r\n                </PopoverTrigger>\r\n                <PopoverContent>\r\n                  <PopoverHeader fontWeight=\"semibold\">\r\n                    Tem certeza que deseja excluir este comentário?\r\n                  </PopoverHeader>\r\n                  <PopoverArrow />\r\n                  <PopoverCloseButton />\r\n                  <PopoverBody>Essa ação não pode ser desfeita.</PopoverBody>\r\n                  <PopoverFooter display=\"flex\" justifyContent=\"flex-end\">\r\n                    <ButtonGroup size=\"sm\">\r\n                      <Button variant=\"outline\" onClick={onClose}>\r\n                        Cancelar\r\n                      </Button>\r\n                      <Button\r\n                        colorScheme=\"red\"\r\n                        onClick={() => {\r\n                          deleteComment(comment);\r\n                          onClose();\r\n                        }}\r\n                      >\r\n                        Excluir\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </PopoverFooter>\r\n                </PopoverContent>\r\n              </Popover>\r\n            </>\r\n          )}\r\n        </Flex>\r\n        <Text fontSize={\"small\"} fontWeight={\"bold\"}>\r\n          {comment?.name}\r\n        </Text>\r\n        <Text fontSize={\"small\"}>{comment?.body}</Text>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import { iComment, iPost, iUser } from \"../../Interfaces\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n  Flex,\r\n  Image,\r\n  Input,\r\n  Popover,\r\n  PopoverArrow,\r\n  PopoverBody,\r\n  PopoverCloseButton,\r\n  PopoverContent,\r\n  PopoverFooter,\r\n  PopoverHeader,\r\n  PopoverTrigger,\r\n  Text,\r\n  Textarea,\r\n  Tooltip,\r\n  useDisclosure,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { useUsersContext } from \"../../Context/Users.context\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport User from \"../User\";\r\nimport { isEmpty } from \"lodash\";\r\nimport { MdVisibility, MdVisibilityOff } from \"react-icons/md\";\r\nimport { usePostsContext } from \"../../Context/Posts.context\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport ImageInput from \"../ImageInput\";\r\nimport Comment from \"../Comment\";\r\n\r\nconst Post = ({ post }: { post: iPost }) => {\r\n  const { getOneUser, users, currentUser } = useUsersContext();\r\n  const { createComment, editPost, deletePost } = usePostsContext();\r\n  const [user, setUser] = useState<iUser>({} as iUser);\r\n  const [showComments, setShowComments] = useState(false);\r\n  const { isOpen, onToggle, onClose } = useDisclosure();\r\n\r\n  // Edit post\r\n  const [image, setImage] = useState<string>(post?.image || \"\");\r\n  const [title, setTitle] = useState<string>(post?.title || \"\");\r\n  const [body, setBody] = useState<string>(post?.body || \"\");\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n\r\n  // New comment\r\n  const [bodyComment, setBodyComment] = useState<string>(\"\");\r\n  const [nameComment, setNameComment] = useState<string>(\"\");\r\n\r\n  const handleOpenEdit = () => {\r\n    setOpenEdit(true);\r\n    setTitle(post?.title || \"\");\r\n    setBody(post?.body || \"\");\r\n    setImage(post?.image || \"\");\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setOpenEdit(false);\r\n    setTitle(\"\");\r\n    setBody(\"\");\r\n    setImage(\"\");\r\n  };\r\n\r\n  const toast = useToast();\r\n\r\n  const getUser = useCallback(() => {\r\n    const data = getOneUser(post?.userId);\r\n    setUser(data);\r\n  }, [getOneUser, post]);\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, [users, getUser, post]);\r\n\r\n  return (\r\n    <Card key={post?.id} width={\"100%\"}>\r\n      <CardHeader>\r\n        <Flex justifyContent={\"space-between\"} alignItems={\"center\"}>\r\n          {!isEmpty(user) && <User hasRoute user={user as iUser} />}\r\n          {currentUser?.id === post?.userId && (\r\n            <Tooltip label=\"Editar post\" placement=\"left\">\r\n              <div onClick={() => handleOpenEdit()}>\r\n                <BiEdit size={20} cursor={\"pointer\"} />\r\n              </div>\r\n            </Tooltip>\r\n          )}\r\n        </Flex>\r\n      </CardHeader>\r\n      <CardBody py={0}>\r\n        {openEdit ? (\r\n          <Flex flexDirection={\"column\"} gap={2}>\r\n            <Input\r\n              placeholder=\"Título do post\"\r\n              borderColor=\"gray.200\"\r\n              value={title}\r\n              onChange={({ target }) => setTitle(target.value)}\r\n            />\r\n            <Textarea\r\n              placeholder=\"Me conta sobre isso...\"\r\n              borderColor=\"gray.200\"\r\n              value={body}\r\n              onChange={({ target }) => setBody(target.value)}\r\n            />\r\n            <ImageInput image={image} setImage={setImage} />\r\n\r\n            <Flex gap={2} justifyContent={\"space-between\"}>\r\n              <Popover\r\n                returnFocusOnClose={false}\r\n                isOpen={isOpen}\r\n                onClose={onClose}\r\n                placement=\"end\"\r\n                closeOnBlur={false}\r\n              >\r\n                <PopoverTrigger>\r\n                  <Button colorScheme=\"red\" onClick={onToggle}>\r\n                    Apagar\r\n                  </Button>\r\n                </PopoverTrigger>\r\n                <PopoverContent>\r\n                  <PopoverHeader fontWeight=\"semibold\">\r\n                    Tem certeza que deseja excluir este post?\r\n                  </PopoverHeader>\r\n                  <PopoverArrow />\r\n                  <PopoverCloseButton />\r\n                  <PopoverBody>Essa ação não pode ser desfeita.</PopoverBody>\r\n                  <PopoverFooter display=\"flex\" justifyContent=\"flex-end\">\r\n                    <ButtonGroup size=\"sm\">\r\n                      <Button variant=\"outline\" onClick={onClose}>\r\n                        Cancelar\r\n                      </Button>\r\n                      <Button\r\n                        colorScheme=\"red\"\r\n                        onClick={() => {\r\n                          deletePost(post);\r\n                          onClose();\r\n                        }}\r\n                      >\r\n                        Excluir\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </PopoverFooter>\r\n                </PopoverContent>\r\n              </Popover>\r\n\r\n              <Flex gap={2}>\r\n                <Button colorScheme=\"red\" onClick={() => handleCloseEdit()}>\r\n                  Cancelar\r\n                </Button>\r\n                <Button\r\n                  colorScheme=\"green\"\r\n                  onClick={() => {\r\n                    editPost({ title, body, image, id: post?.id });\r\n                    handleCloseEdit();\r\n                  }}\r\n                >\r\n                  Salvar\r\n                </Button>\r\n              </Flex>\r\n            </Flex>\r\n          </Flex>\r\n        ) : (\r\n          <Box gap={2} alignItems={\"center\"}>\r\n            <Text fontWeight={\"bold\"} mb={2}>\r\n              {post?.title}\r\n            </Text>\r\n            <Text whiteSpace={\"pre-line\"}>{post?.body}</Text>\r\n            {post?.image && (\r\n              <Image src={post?.image} mt={5} alt=\"Imagem do post\" />\r\n            )}\r\n          </Box>\r\n        )}\r\n      </CardBody>\r\n\r\n      <CardFooter p={5} flexDir={\"column\"}>\r\n        <Text\r\n          fontSize={\"smaller\"}\r\n          mb={1}\r\n          color={\"gray.500\"}\r\n          display={\"flex\"}\r\n          gap={2}\r\n        >\r\n          {showComments ? (\r\n            <MdVisibility\r\n              cursor={\"pointer\"}\r\n              onClick={() => setShowComments(false)}\r\n              size={20}\r\n            />\r\n          ) : (\r\n            <MdVisibilityOff\r\n              size={20}\r\n              cursor={\"pointer\"}\r\n              onClick={() => setShowComments(true)}\r\n            />\r\n          )}\r\n          {post?.comments?.length} Comments{\" \"}\r\n        </Text>\r\n        {showComments && (\r\n          <Flex\r\n            justify=\"space-between\"\r\n            flexDirection={\"column\"}\r\n            gap={2}\r\n            bg=\"gray.50\"\r\n            p={5}\r\n            rounded={\"md\"}\r\n          >\r\n            {!isEmpty(post?.comments) &&\r\n              post?.comments?.map((comment: iComment) => (\r\n                <Comment key={comment?.id} comment={comment} />\r\n              ))}\r\n            {!isEmpty(currentUser) && (\r\n              <Card p={5} gap={2}>\r\n                <Text fontSize={\"small\"} color=\"gray.500\">\r\n                  Adicione um comentário:\r\n                </Text>\r\n                <Input\r\n                  placeholder=\"De um título para seu comentário\"\r\n                  borderColor=\"gray.200\"\r\n                  value={nameComment}\r\n                  onChange={({ target }) => setNameComment(target.value)}\r\n                />\r\n                <Textarea\r\n                  placeholder=\"Digite seu comentário...\"\r\n                  borderColor=\"gray.200\"\r\n                  value={bodyComment}\r\n                  onChange={({ target }) => setBodyComment(target.value)}\r\n                />\r\n\r\n                <Box>\r\n                  <Button\r\n                    onClick={() => {\r\n                      createComment({\r\n                        body: bodyComment,\r\n                        name: nameComment,\r\n                        postId: post?.id,\r\n                        email: currentUser?.email,\r\n                      });\r\n                      setBodyComment(\"\");\r\n                      setNameComment(\"\");\r\n                      toast({\r\n                        title: \"Comentário criado com sucesso!\",\r\n                        description: \"Parabéns, seu comentário foi adicionado!\",\r\n                        status: \"success\",\r\n                        duration: 3000,\r\n                        isClosable: true,\r\n                      });\r\n                    }}\r\n                  >\r\n                    Criar Comentário\r\n                  </Button>\r\n                </Box>\r\n              </Card>\r\n            )}\r\n          </Flex>\r\n        )}\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { Box, Button, Flex, Heading, Text, Tooltip } from \"@chakra-ui/react\";\r\nimport { iUser } from \"../../Interfaces\";\r\nimport { BiLogInCircle, BiUser } from \"react-icons/bi\";\r\nimport { useUsersContext } from \"../../Context/Users.context\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst User = ({\r\n  user,\r\n  hasAction = false,\r\n  hasRoute = false,\r\n}: {\r\n  user: iUser;\r\n  hasAction?: boolean;\r\n  hasRoute?: boolean;\r\n}) => {\r\n  const { loginUser } = useUsersContext();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Flex flex=\"1\" gap=\"2\" alignItems=\"center\" justifyContent={\"space-between\"}>\r\n      <Flex\r\n        gap=\"2\"\r\n        cursor={hasRoute ? \"pointer\" : \"\"}\r\n        onClick={(e) => {\r\n          if (!hasRoute) return;\r\n          e.preventDefault();\r\n          navigate(`/posts/${user?.id}`);\r\n        }}\r\n      >\r\n        <Flex\r\n          width=\"50px\"\r\n          height=\"50px\"\r\n          bg=\"gray.100\"\r\n          borderRadius=\"50%\"\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n        >\r\n          <BiUser size={25} />\r\n        </Flex>\r\n        <Box>\r\n          <Heading size=\"sm\">{user?.name || \"\"}</Heading>\r\n          <Text>{user.email || \"\"}</Text>\r\n        </Box>\r\n      </Flex>\r\n      {hasAction && (\r\n        <Flex gap={2}>\r\n          <Tooltip label=\"Fazer login como este usuário\" placement=\"left\">\r\n            <Button\r\n              size={\"sm\"}\r\n              p={1}\r\n              rounded={\"full\"}\r\n              onClick={() => loginUser(user)}\r\n            >\r\n              <BiLogInCircle size={20} />\r\n            </Button>\r\n          </Tooltip>\r\n        </Flex>\r\n      )}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { Box, Flex, Text } from \"@chakra-ui/react\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { iPost } from \"../../Interfaces\";\r\nimport { usePostsContext } from \"../../Context/Posts.context\";\r\nimport Post from \"../../Components/Post\";\r\n\r\nconst Feed = () => {\r\n  const { posts, getAllPost } = usePostsContext();\r\n\r\n  useEffect(() => {\r\n    if (!posts.length) {\r\n      getAllPost();\r\n    }\r\n  }, [getAllPost, posts]);\r\n\r\n  return (\r\n    <Box>\r\n      <Flex mb={5} justifyContent={\"space-between\"}>\r\n        <Text fontWeight={\"bold\"} color=\"gray.500\">\r\n          {posts.length} Posts\r\n        </Text>\r\n      </Flex>\r\n      <Flex direction={\"column\"} gap={10}>\r\n        {!!posts.length &&\r\n          posts?.map((post: iPost) => <Post key={post?.id} post={post} />)}\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n"],"names":["_ref","comment","isOpen","onToggle","onClose","useDisclosure","deleteComment","usePostsContext","currentUser","useUsersContext","_jsx","_Fragment","children","_jsxs","Card","p","Flex","gap","justifyContent","Text","fontSize","email","Popover","returnFocusOnClose","placement","closeOnBlur","PopoverTrigger","Button","onClick","BiTrash","color","cursor","PopoverContent","PopoverHeader","fontWeight","PopoverArrow","PopoverCloseButton","PopoverBody","PopoverFooter","display","ButtonGroup","size","variant","colorScheme","name","body","_post$comments","_post$comments2","post","getOneUser","users","createComment","editPost","deletePost","user","setUser","useState","showComments","setShowComments","image","setImage","title","setTitle","setBody","openEdit","setOpenEdit","bodyComment","setBodyComment","nameComment","setNameComment","handleCloseEdit","toast","useToast","getUser","useCallback","data","userId","useEffect","width","CardHeader","alignItems","isEmpty","User","hasRoute","id","Tooltip","label","BiEdit","CardBody","py","flexDirection","Input","placeholder","borderColor","value","onChange","_ref2","target","Textarea","_ref3","ImageInput","Box","mb","whiteSpace","Image","src","mt","alt","CardFooter","flexDir","MdVisibility","MdVisibilityOff","comments","length","justify","bg","rounded","map","Comment","_ref4","_ref5","postId","description","status","duration","isClosable","hasAction","loginUser","navigate","useNavigate","flex","e","preventDefault","concat","height","borderRadius","BiUser","Heading","BiLogInCircle","Feed","posts","getAllPost","direction","Post"],"sourceRoot":""}