{"version":3,"file":"static/js/25.a1e3b532.chunk.js","mappings":"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","sources":["Components/FormProfile/index.tsx","Constants/index.tsx","Pages/Profile/index.tsx"],"sourcesContent":["import { Box, Card, Input, Text } from \"@chakra-ui/react\";\r\nimport { iUser } from \"../../Interfaces\";\r\n\r\nconst inputsBasic = [\r\n  {\r\n    name: \"name\",\r\n    text: \"Nome\",\r\n    disabled: false,\r\n  },\r\n  {\r\n    name: \"username\",\r\n    text: \"Nome de usuário\",\r\n    disabled: false,\r\n  },\r\n  {\r\n    name: \"email\",\r\n    text: \"E-mail\",\r\n    disabled: true,\r\n  },\r\n  {\r\n    name: \"phone\",\r\n    text: \"Telefone\",\r\n    disabled: false,\r\n  },\r\n  {\r\n    name: \"website\",\r\n    text: \"Website\",\r\n    disabled: false,\r\n  },\r\n];\r\n\r\nconst inputsAddress = [\r\n  {\r\n    name: \"street\",\r\n    text: \"Rua\",\r\n  },\r\n  {\r\n    name: \"suite\",\r\n    text: \"Nº\",\r\n  },\r\n  {\r\n    name: \"city\",\r\n    text: \"Cidade\",\r\n  },\r\n  {\r\n    name: \"zipcode\",\r\n    text: \"CEP\",\r\n  },\r\n];\r\n\r\nconst inputsCompany = [\r\n  {\r\n    name: \"name\",\r\n    text: \"Nome da empresa\",\r\n  },\r\n  {\r\n    name: \"catchPhrase\",\r\n    text: \"Tagline da empresa\",\r\n  },\r\n  {\r\n    name: \"bs\",\r\n    text: \"B.S. da empresa\",\r\n  },\r\n];\r\n\r\nconst FormProfile = ({\r\n  user,\r\n  setUser,\r\n  isNewUser = false,\r\n}: {\r\n  user: iUser;\r\n  setUser(user: iUser): void;\r\n  isNewUser?: boolean;\r\n}) => {\r\n  const handleUserChange = ({\r\n    value,\r\n    key,\r\n    type,\r\n  }: {\r\n    value: string;\r\n    key: string;\r\n    type?: \"address\" | \"company\";\r\n  }) => {\r\n    if (type === \"address\") {\r\n      setUser({\r\n        ...user,\r\n        address: {\r\n          ...user.address,\r\n          [key]: value,\r\n        },\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (type === \"company\") {\r\n      setUser({\r\n        ...user,\r\n        company: {\r\n          ...user.company,\r\n          [key]: value,\r\n        },\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    setUser({ ...user, [key]: value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card p={5} borderRadius={10} gap={2}>\r\n        <Text mb={2} fontWeight={\"bold\"}>\r\n          Informações básicas\r\n        </Text>\r\n        {inputsBasic.map((input) => (\r\n          <Box key={input.name}>\r\n            <Text fontSize={\"small\"} mb={2} color=\"gray.500\">\r\n              {input.text === \"E-mail\" && !isNewUser\r\n                ? \"E-mail (Informação não editadável)\"\r\n                : input.text}\r\n            </Text>\r\n            <Input\r\n              placeholder={input.text}\r\n              borderColor=\"gray.200\"\r\n              disabled={input.disabled && !isNewUser}\r\n              value={user[input.name as keyof iUser] as string}\r\n              onChange={({ target }) =>\r\n                handleUserChange({ value: target.value, key: input.name })\r\n              }\r\n            />\r\n          </Box>\r\n        ))}\r\n      </Card>\r\n      <Card p={5} borderRadius={10} gap={2}>\r\n        <Text mb={2} fontWeight={\"bold\"}>\r\n          Endereço\r\n        </Text>\r\n        {inputsAddress.map((input) => (\r\n          <Box key={input.name}>\r\n            <Text fontSize={\"small\"} mb={2} color=\"gray.500\">\r\n              {input.text}\r\n            </Text>\r\n            <Input\r\n              placeholder={input.text}\r\n              borderColor=\"gray.200\"\r\n              value={\r\n                user[\"address\"][input.name as keyof iUser[\"address\"]] as string\r\n              }\r\n              onChange={({ target }) =>\r\n                handleUserChange({\r\n                  value: target.value,\r\n                  key: input.name,\r\n                  type: \"address\",\r\n                })\r\n              }\r\n            />\r\n          </Box>\r\n        ))}\r\n      </Card>\r\n      <Card p={5} borderRadius={10} gap={2}>\r\n        <Text mb={2} fontWeight={\"bold\"}>\r\n          Empresa\r\n        </Text>\r\n        {inputsCompany.map((input) => (\r\n          <Box key={input.name}>\r\n            <Text fontSize={\"small\"} mb={2} color=\"gray.500\">\r\n              {input.text}\r\n            </Text>\r\n            <Input\r\n              placeholder={input.text}\r\n              borderColor=\"gray.200\"\r\n              value={\r\n                user[\"company\"][input.name as keyof iUser[\"company\"]] as string\r\n              }\r\n              onChange={({ target }) =>\r\n                handleUserChange({\r\n                  value: target.value,\r\n                  key: input.name,\r\n                  type: \"company\",\r\n                })\r\n              }\r\n            />\r\n          </Box>\r\n        ))}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormProfile;\r\n","import { iUser } from \"../Interfaces\";\r\n\r\nexport const DEFAULT_USER: iUser = {\r\n  id: 0,\r\n  name: \"\",\r\n  username: \"\",\r\n  email: \"\",\r\n  address: {\r\n    street: \"\",\r\n    suite: \"\",\r\n    city: \"\",\r\n    zipcode: \"\",\r\n    geo: {\r\n      lat: \"\",\r\n      lng: \"\",\r\n    },\r\n  },\r\n  phone: \"\",\r\n  website: \"\",\r\n  company: {\r\n    name: \"\",\r\n    catchPhrase: \"\",\r\n    bs: \"\",\r\n  },\r\n};\r\n","import { Box, Button, Flex } from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { useUsersContext } from \"../../Context/Users.context\";\r\nimport { isEmpty } from \"lodash\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { iUser } from \"../../Interfaces\";\r\nimport FormProfile from \"../../Components/FormProfile\";\r\nimport { DEFAULT_USER } from \"../../Constants\";\r\n\r\nconst Profile = () => {\r\n  const { currentUser, editUser } = useUsersContext();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [user, setUser] = useState<iUser>(DEFAULT_USER);\r\n\r\n  useEffect(() => {\r\n    setUser(currentUser);\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    if (isEmpty(currentUser)) {\r\n      navigate(\"/feed\");\r\n    }\r\n  }, [currentUser, navigate]);\r\n\r\n  return (\r\n    <Box>\r\n      <Flex direction={\"column\"} gap={10}>\r\n        <FormProfile user={user} setUser={setUser} />\r\n\r\n        <Flex justifyContent={\"space-between\"}>\r\n          <Button onClick={() => navigate(\"/feed\")}>Voltar</Button>\r\n          <Button colorScheme=\"green\" onClick={() => editUser(user)}>\r\n            Editar Perfil\r\n          </Button>\r\n        </Flex>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["inputsBasic","name","text","disabled","inputsAddress","inputsCompany","_ref","user","setUser","isNewUser","handleUserChange","_ref2","value","key","type","company","address","_jsxs","_Fragment","children","Card","p","borderRadius","gap","_jsx","Text","mb","fontWeight","map","input","Box","fontSize","color","Input","placeholder","borderColor","onChange","_ref3","target","_ref4","_ref5","DEFAULT_USER","id","username","email","street","suite","city","zipcode","geo","lat","lng","phone","website","catchPhrase","bs","Profile","currentUser","editUser","useUsersContext","navigate","useNavigate","useState","useEffect","isEmpty","Flex","direction","FormProfile","justifyContent","Button","onClick","colorScheme"],"sourceRoot":""}